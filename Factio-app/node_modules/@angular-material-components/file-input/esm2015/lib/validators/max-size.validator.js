/**
 * @fileoverview added by tsickle
 * Generated from: lib/validators/max-size.validator.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Validator for size of file
 * @param {?} max Max of size of file (in bytes)
 * @return {?}
 */
export function MaxSizeValidator(max) {
    return (/**
     * @param {?} ctrl
     * @return {?}
     */
    (ctrl) => {
        max = Number(max);
        if (isNaN(max)) {
            throw 'MaxSizeValidator: max of size of file is invalid';
        }
        if (!ctrl.value)
            return null;
        /** @type {?} */
        let files = ctrl.value;
        if (!Array.isArray(ctrl.value)) {
            files = [ctrl.value];
        }
        if (!files.length)
            return null;
        /** @type {?} */
        const add = (/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        (a, b) => a + b);
        /** @type {?} */
        const sumSize = files.map((/**
         * @param {?} x
         * @return {?}
         */
        x => x.size)).reduce(add);
        if (sumSize > max) {
            return {
                maxSize: true
            };
        }
        return null;
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4LXNpemUudmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlsZS1pbnB1dC9zcmMvbGliL3ZhbGlkYXRvcnMvbWF4LXNpemUudmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFNQSxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsR0FBVztJQUN4Qzs7OztJQUFPLENBQUMsSUFBcUIsRUFBMkIsRUFBRTtRQUN0RCxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1osTUFBTSxrREFBa0QsQ0FBQztTQUM1RDtRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztZQUFFLE9BQU8sSUFBSSxDQUFDOztZQUN6QixLQUFLLEdBQVcsSUFBSSxDQUFDLEtBQUs7UUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzVCLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN4QjtRQUNELElBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTTtZQUFFLE9BQU8sSUFBSSxDQUFDOztjQUN4QixHQUFHOzs7OztRQUFHLENBQUMsQ0FBTSxFQUFFLENBQU0sRUFBVSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQTs7Y0FDdkMsT0FBTyxHQUFHLEtBQUssQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUNsRCxJQUFJLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDZixPQUFPO2dCQUNILE9BQU8sRUFBRSxJQUFJO2FBQ2hCLENBQUM7U0FDTDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUMsRUFBQTtBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRvckZuLCBWYWxpZGF0aW9uRXJyb3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuLyoqXHJcbiAqIFZhbGlkYXRvciBmb3Igc2l6ZSBvZiBmaWxlXHJcbiAqIEBwYXJhbSBtYXggTWF4IG9mIHNpemUgb2YgZmlsZSAoaW4gYnl0ZXMpXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gTWF4U2l6ZVZhbGlkYXRvcihtYXg6IG51bWJlcik6IFZhbGlkYXRvckZuIHtcclxuICAgIHJldHVybiAoY3RybDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwgPT4ge1xyXG4gICAgICAgIG1heCA9IE51bWJlcihtYXgpO1xyXG4gICAgICAgIGlmIChpc05hTihtYXgpKSB7XHJcbiAgICAgICAgICAgIHRocm93ICdNYXhTaXplVmFsaWRhdG9yOiBtYXggb2Ygc2l6ZSBvZiBmaWxlIGlzIGludmFsaWQnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWN0cmwudmFsdWUpIHJldHVybiBudWxsO1xyXG4gICAgICAgIGxldCBmaWxlczogRmlsZVtdID0gY3RybC52YWx1ZTtcclxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY3RybC52YWx1ZSkpIHtcclxuICAgICAgICAgICAgZmlsZXMgPSBbY3RybC52YWx1ZV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCFmaWxlcy5sZW5ndGgpIHJldHVybiBudWxsO1xyXG4gICAgICAgIGNvbnN0IGFkZCA9IChhOiBhbnksIGI6IGFueSk6IG51bWJlciA9PiBhICsgYjtcclxuICAgICAgICBjb25zdCBzdW1TaXplID0gZmlsZXMubWFwKHggPT4geC5zaXplKS5yZWR1Y2UoYWRkKTtcclxuICAgICAgICBpZiAoc3VtU2l6ZSA+IG1heCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgbWF4U2l6ZTogdHJ1ZVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufSJdfQ==