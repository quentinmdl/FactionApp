{"version":3,"sources":["webpack:///src/app/components/Auth/login/login.component.ts","webpack:///src/app/components/Auth/login/login.component.html","webpack:///src/app/api/_services/index.ts","webpack:///src/environments/environment.ts","webpack:///src/app/api/_services/authentication.service.ts","webpack:///src/app/components/table/user/add-user/add-user.component.ts","webpack:///src/app/components/table/user/add-user/add-user.component.html","webpack:///src/app/components/Auth/register/register.component.ts","webpack:///src/app/components/Auth/register/register.component.html","webpack:///src/app/api/_helpers/index.ts","webpack:///src/app/api/_helpers/basic-auth.interceptor.ts","webpack:///src/app/components/table/user/list-user/list-user.component.ts","webpack:///src/app/components/table/user/list-user/list-user.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/reset-password/reset-password.resolver.ts","webpack:///src/app/components/reset-password/index.ts","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/nav-menu/nav-menu.component.ts","webpack:///src/app/components/nav-menu/nav-menu.component.html","webpack:///src/app/api/_helpers/error.interceptor.ts","webpack:///src/app/components/reset-password/reset-password.component.ts","webpack:///src/app/components/reset-password/reset-password.component.html","webpack:///src/app/api/_services/user.service.ts","webpack:///src/app/components/table/user/edit-user/edit-user.component.ts","webpack:///src/app/components/table/user/edit-user/edit-user.component.html","webpack:///src/app/api/_helpers/auth.guard.ts","webpack:///src/main.ts"],"names":["LoginComponent","formBuilder","route","router","authenticationService","loading","submitted","error","currentUserValue","navigate","window","location","pathname","elements","document","getElementsByClassName","setAttribute","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","controls","invalid","login","f","value","pipe","subscribe","data","onSubmit","selector","templateUrl","styleUrls","environment","production","apiUrl","authApiUrl","AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","email","post","user","authdata","btoa","setItem","stringify","token","next","removeItem","providedIn","AddUserComponent","userService","addForm","id","firstName","lastName","age","salary","register","RegisterComponent","registerForm","firstname","lastname","confirmPassword","phoneNumber","address","city","zip","dirty","valid","BasicAuthInterceptor","request","clone","setHeaders","Authorization","replace","handle","ListUserComponent","searchText","formGroup","filter","users","getAll","users$","getUsers","filteredUsers$","get","valueChanges","val","x","toLowerCase","includes","u","toString","block","reload","AppComponent","title","ResetPasswordResolver","Promise","resolve","reject","paramMap","getUserByToken","AppModule","provide","useClass","multi","withServerTransition","appId","forRoot","path","component","canActivate","declarations","imports","providers","bootstrap","webpackEmptyAsyncContext","req","then","e","Error","code","keys","module","exports","NavMenuComponent","isExpanded","logout","toggle","ErrorInterceptor","err","status","message","statusText","ResetPasswordComponent","routeData","UserService","put","userId","EditUserComponent","editForm","type","isBlocked","getUserById","setValue","update","alert","UserpackId","AuthGuard","state","url","getBaseUrl","getElementsByTagName","href","useFactory","deps","bootstrapModule","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../../api/_services';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/users']);\n        }\n    }\n\n    ngOnInit() {\n\n        if(window.location.pathname == \"/login\") {\n            let elements = document.getElementsByClassName(\"navbar-nav\");\n            elements[0].setAttribute(\"style\", \"visibility: hidden !important;\")\n          }\n\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"text-center\">\n            <img src=\"../../../assets/logo.png\" width=\"350\" height=\"250\">\n    </div>\n    <div class=\"card text-center\" style=\"margin-top:10%\">\n        <h4 class=\"card-header\">Identifiez-vous pour accéder à Factio</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Identifiant</label>\n                    <input type=\"text\" formControlName=\"username\" placeholder=\"Votre login\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Mot de passe</label>\n                    <input type=\"password\" formControlName=\"password\" placeholder=\"Mot de passe\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"text-right\">\n                    <button type=\"button\" class=\"btn btn-link\">Mot de passe oublié ?</button>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"text-right\">\n                    <a routerLink=\"/register\" class=\"btn btn-link\">Pas encore de compte ?</a>\n                    </div>\n                </div>\n\n                <button [disabled]=\"loading\" class=\"btn text-center\" style=\"background-color: #eb6d6d; color: white;\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Se connecter\n                </button>\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n\n</div>\n","export * from './authentication.service';\nexport * from './user.service';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    apiUrl: 'https://192.168.0.46:45456/api',\n    authApiUrl: 'https://192.168.0.46:45455/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(email: string, password: string) {\n        return this.http.post<any>(`${environment.authApiUrl}/User/authenticate`, { email, password })\n            .pipe(map(user => {\n                user.authdata = window.btoa(email + ':' + password);\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('UserToken', JSON.stringify(user.token));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    } \n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport { UserService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\n\n  addForm: FormGroup;\n\n  ngOnInit() {\n    if(!window.localStorage.getItem('currentUser')) {\n      this.router.navigate(['login']);\n      return;\n    }\n\n    this.addForm = this.formBuilder.group({\n      id: [],\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      age: ['', Validators.required],\n      salary: ['', Validators.required]\n    });\n\n  }\n\n  onSubmit() {\n    this.userService.register(this.addForm.value)\n      .subscribe( data => {\n        this.router.navigate(['list-user']);\n      });\n  }\n\n}\n","<div class=\"col-md-6 user-container\">\n  <h2 class=\"text-center\">Add User</h2>\n  <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"username\">User Name:</label>\n      <input type=\"text\" formControlName=\"username\" placeholder=\"username\" name=\"username\" class=\"form-control\" id=\"username\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" formControlName=\"password\" placeholder=\"password\" name=\"password\" class=\"form-control\" id=\"password\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name:</label>\n      <input formControlName=\"firstName\" placeholder=\"First Name\" name=\"firstName\" class=\"form-control\" id=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name:</label>\n      <input formControlName=\"lastName\" placeholder=\"Last name\" name=\"lastName\" class=\"form-control\" id=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"age\">Age:</label>\n      <input type=\"number\" formControlName=\"age\" placeholder=\"age\" name=\"age\" class=\"form-control\" id=\"age\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"salary\">Salary:</label>\n      <input type=\"number\" formControlName=\"salary\" placeholder=\"salary\" name=\"salary\" class=\"form-control\" id=\"salary\">\n    </div>\n\n    <button class=\"btn btn-success\">Add</button>\n  </form>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../../api/_services';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to login after register\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    ngOnInit() {\n\n        this.registerForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            firstname: ['', Validators.required],\n            lastname: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required],\n            phoneNumber: ['', Validators.required],\n            address: ['', Validators.required],\n            city: ['', Validators.required],\n            zip: ['', Validators.required],\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/login';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    // onSubmit() {\n    //     this.submitted = true;\n\n    //     // stop here if form is invalid\n    //     if (this.registerForm.invalid) {\n    //         return;\n    //     }\n\n\n    //     // this.loading = true;\n    //     // this.authenticationService.register(this.f.username.value, this.f.password.value)\n    //     //     .pipe(first())\n    //     //     .subscribe(\n    //     //         data => {\n    //     //             this.router.navigate([this.returnUrl]);\n    //     //         },\n    //     //         error => {\n    //     //             this.error = error;\n    //     //             this.loading = false;\n    //     //         });\n\n    // }\n\n    saveUser(): void {  \n        if (this.registerForm.dirty && this.registerForm.valid) {  \n            // alert(`name' : ${this.userForm.value.name}  'email' : ${this.userForm.value.email}`);              \n        }  \n    } \n}\n\n","<p>register works!</p>\n","export * from './auth.guard';\nexport * from './basic-auth.interceptor';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services';\n\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with basic auth credentials if available\n        const currentUser = this.authenticationService.currentUserValue;\n\n        let token = window.localStorage.getItem('UserToken');\n        if (token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: 'bearer ' + token.replace(/['\"]+/g, '')\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Component, OnInit , Inject, ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {Router} from \"@angular/router\";\nimport { Observable, of } from 'rxjs';\nimport { map, startWith, tap, withLatestFrom } from 'rxjs/operators';\nimport { User } from 'src/app/api/_models';\nimport { UserService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n\n  users: User[];\n  searchText: string = '';\n  users$: Observable<User[]>;\n  filteredUsers$: Observable<User[]>;\n  formGroup: FormGroup;\n\n  constructor(private router: Router, private userService: UserService, private formBuilder: FormBuilder) {\n    this.formGroup = this.formBuilder.group({ filter: [''] });\n   }\n\n   private getUsers() {\n    return of(this.users).pipe(tap());\n  }\n\n  ngOnInit() {\n\n    if(!window.localStorage.getItem('currentUser')) {\n      this.router.navigate(['login']);\n      return;\n    }\n\n    if(window.location.pathname != \"/login\") {\n      let elements = document.getElementsByClassName(\"navbar-nav\");\n      elements[0].setAttribute(\"style\", \"visibility: visible !important;\")\n    }\n\n    this.userService.getAll()\n      .subscribe( data => {\n        this.users = data;\n        this.formGroup = this.formBuilder.group({ filter: [''] });\n\n      this.users$ = this.getUsers();\n\n      this.filteredUsers$ = this.formGroup.get('filter').valueChanges.pipe(\n        startWith(''),\n        withLatestFrom(this.users$),\n        map(([val, users]) =>\n          !val ? users : users.filter((x) => x.username.toLowerCase().includes(val.toLowerCase()))\n        )\n      );\n      });\n  }\n\n  deleteUser(user: User): void {\n    this.userService.delete(user.id)\n      .subscribe( data => {\n        this.users = this.users.filter(u => u !== user);\n      })\n  };\n\n  editUser(user: User): void {\n    window.localStorage.removeItem(\"editUserId\");\n    window.localStorage.setItem(\"editUserId\", user.id.toString());\n    this.router.navigate(['edit-user']);\n  };\n\n  blockUser(user: User): void {\n    this.userService.block(user.id)\n      .subscribe( data => {\n        this.users = this.users.filter(u => u !== user);\n      })\n      window.location.reload();\n  };\n\n  addUser(): void {\n    this.router.navigate(['add-user']);\n  };\n}\n","<div class=\"col-md-12 user-container\">\n  <div class=\"row\">\n    <div class=\"col-md-3 mx-auto\">\n\n      <form [formGroup]=\"formGroup\">\n      <div class=\"md-form\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"searchString\"\n          placeholder=\"Rechercher\"\n          formControlName=\"filter\"\n        />\n      </div>\n    </form>\n    </div>\n  </div>\n  <table class=\"table table-striped text-center\" style=\"margin-top: 3%;\">\n    <thead>\n      <tr>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">Nom</th>\n        <th scope=\"col\">Prénom</th>\n        <th scope=\"col\">Pseudo</th>\n        <th scope=\"col\">Téléphone</th>\n        <!-- <th scope=\"col\">Date de naissance</th> -->\n        <th scope=\"col\">Ville</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of filteredUsers$ | async\">\n        <td>\n          {{ user.id }}\n        </td>\n        <td>{{ user.lastName }}</td>\n        <td>{{ user.firstName }}</td>\n        <td>{{ user.username }}</td>\n        <td>\n          {{ user.phoneNumber }}\n        </td>\n        <!-- <td>\n          {{ user.birth | date }}\n        </td> -->\n        <td>\n          {{ user.city }}\n        </td>\n        <td>\n          {{ user.email }}\n        </td>\n        <td>\n          <!-- <mat-icon class=\"mat-icon-rtl-mirror\" svgIcon=\"thumb-up\"></mat-icon> -->\n            <mat-icon (click)=\"editUser(user)\">edit</mat-icon>\n            <mat-icon (click)=\"deleteUser(user)\">delete</mat-icon>\n            <mat-icon (click)=\"blockUser(user)\">block</mat-icon>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './api/_models';\nimport { AuthenticationService } from './api/_services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n  currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    \n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve } from \"@angular/router\";\nimport { User } from \"src/app/api/_models\";\nimport { UserService } from \"src/app/api/_services\";\n\n@Injectable()\nexport class ResetPasswordResolver implements Resolve<any> {\n\n  constructor(public userService: UserService) { }\n  user: User;\n\n  resolve(route: ActivatedRouteSnapshot,) {\n\n    return new Promise((resolve, reject) => {\n      let token = route.paramMap.get('token');\n      this.userService.getUserByToken(token).subscribe(user => {\n        debugger;\n        this.user = user;\n        resolve(user)\n      })\n    })\n  }\n}\n","export * from './reset-password.component';","import { ResetPasswordResolver } from './components/reset-password/reset-password.resolver';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './components/nav-menu/nav-menu.component';\nimport { LoginComponent } from './components/Auth/login/login.component';\nimport { RegisterComponent } from './components/Auth/register/register.component';\nimport { AuthGuard, BasicAuthInterceptor, ErrorInterceptor } from './api/_helpers';\nimport { AddUserComponent } from './components/table/user/add-user/add-user.component';\nimport { ListUserComponent } from './components/table/user/list-user/list-user.component';\nimport { EditUserComponent } from './components/table/user/edit-user/edit-user.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ResetPasswordComponent } from './components/reset-password';\n\n\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    LoginComponent,\n    RegisterComponent,\n\n    //User\n    AddUserComponent,\n    EditUserComponent,\n    ListUserComponent,\n\n    ResetPasswordComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    MatIconModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    FormsModule,\n    BrowserModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([\n      { path: '', component: ListUserComponent, canActivate: [AuthGuard] },\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'users', component: ListUserComponent },\n\n      { path: 'add-user', component: AddUserComponent },\n      { path: 'edit-user', component: EditUserComponent },\n\n      { path: 'reset-password', component: ResetPasswordComponent },\n\n      { path: 'reset-password', component: ResetPasswordComponent },\n      {\n        path: 'reset-password/:token',\n        component: ResetPasswordComponent,\n        resolve: { token: ResetPasswordResolver }\n      },\n\n    ]),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    ResetPasswordResolver ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthenticationService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n  /**\n   *\n   */\n  constructor(private AuthenticationService: AuthenticationService, private router: Router) {\n      \n  }\n\n  ngOnInit(): void {\n    if(window.location.pathname == \"/login\" || window.location.pathname == \"/reset-password\" ||  window.location.pathname == \"/register\") {\n      let elements = document.getElementsByClassName(\"navbar-nav\");\n      elements[0].setAttribute(\"style\", \"visibility: hidden !important;\")\n    } else {\n      let elements = document.getElementsByClassName(\"navbar-nav\");\n      elements[0].setAttribute(\"style\", \"visibility: visible !important;\")\n    }\n  }\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  logout() {\n    this.AuthenticationService.logout();\n    this.router.navigate(['/login']);\n}\n}\n","<header>\n  <nav\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n  >\n    <div class=\"container\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\".navbar-collapse\"\n        aria-label=\"Toggle navigation\"\n        [attr.aria-expanded]=\"isExpanded\"\n        (click)=\"toggle()\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n        [ngClass]=\"{ show: isExpanded }\"\n      >\n        <ul class=\"navbar-nav flex-grow\">\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/users']\">Utilisateurs</a>\n          </li>\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-item nav-link\" (click)=\"logout()\">Déconnexion</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                // location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../api/_services';\nimport { User } from 'src/app/api/_models';\n\n\n@Component({ templateUrl: 'reset-password.component.html' })\nexport class ResetPasswordComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n    user: User;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n\n    }\n\n    ngOnInit() {\n\n        if(window.location.pathname == \"/login\") {\n            let elements = document.getElementsByClassName(\"navbar-nav\");\n            elements[0].setAttribute(\"style\", \"visibility: hidden !important;\")\n          }\n\n          this.route.data.subscribe(routeData => {\n            let user = routeData['user'];\n            if (user) {\n              this.user = user;\n            }\n          })\n\n        this.loginForm = this.formBuilder.group({\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"text-center\">\n            <img src=\"../../../assets/logo.png\" width=\"350\" height=\"250\">\n    </div>\n    <div class=\"card text-center\" style=\"margin-top:10%\">\n        <h4 class=\"card-header\">Réinitialiser votre mot de passe</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nouveau mot de passe</label>\n                    <input type=\"text\" formControlName=\"password\" placeholder=\"Mot de passe\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Confirmation du mot de passe</label>\n                    <input type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Confirmation\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n\n                <button [disabled]=\"loading\" class=\"btn text-center\" style=\"background-color: #eb6d6d; color: white;\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Valider\n                </button>\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/User`);\n    }\n\n    getUserById(id: number) {\n        return this.http.get<User>(`${environment.apiUrl}/User/${id}`);\n    }\n\n    update(user: User) {\n        return this.http.put(`${environment.apiUrl}/User/${user.id}`, user);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/User/register`, user);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`${environment.apiUrl}/User/${id}`);\n    }\n\n    block(userId: number) {\n        return this.http.get(`/${userId}`, );\n    }\n\n    getUserByToken(token: string) {\n      return this.http.get<User>(`${environment.apiUrl}/User/GetUserByToken/${token}`);\n    }\n}\n","import { Component, OnInit , Inject} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {first} from \"rxjs/operators\";\nimport { User } from 'src/app/api/_models';\nimport { UserService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  user: User;\n  editForm: FormGroup;\n  constructor(private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n\n    if(!window.localStorage.getItem('currentUser')) {\n      this.router.navigate(['login']);\n      return;\n    }\n\n    let userId = window.localStorage.getItem(\"editUserId\");\n    this.editForm = this.formBuilder.group({\n      id: [],\n      username: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      city: ['', Validators.required],\n      token: ['', Validators.required],\n      password: ['', Validators.required],\n      type: ['', Validators.required],\n      isBlocked: ['', Validators.required],\n    });\n    this.userService.getUserById(+userId)\n      .subscribe( data => {\n        this.editForm.setValue(data);\n      });\n  }\n\n  onSubmit() {\n    this.userService.update(this.editForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['users']);\n        },\n        error => {\n          alert(error);\n        });\n  }\n\n  editPackForUser(UserpackId: number) {\n    window.localStorage.removeItem(\"userPackId\");\n    window.localStorage.setItem(\"userPackId\", UserpackId.toString());\n    this.router.navigate(['edit-userpack']);\n  }\n\n}\n","<div class=\"col-md-12 user-container\">\n  <h2 class=\"text-center\">Modification d'un utilisateur</h2>\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n\n    <div class=\"col-md-6\">\n      <div class=\"hidden\">\n        <label for=\"username\">Identifiant :</label>\n        <input type=\"text\" formControlName=\"id\" placeholder=\"id\" name=\"id\" class=\"form-control\" id=\"id\" readonly=\"true\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Nom d'utilisateur :</label>\n        <input type=\"text\" formControlName=\"username\" placeholder=\"Nom d'utilisateur\" name=\"username\" class=\"form-control\" id=\"username\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"firstname\">Prénom :</label>\n        <input formControlName=\"firstName\" placeholder=\"Prénom\" name=\"firstname\" class=\"form-control\" id=\"firstname\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastname\">Nom :</label>\n        <input formControlName=\"lastName\" placeholder=\"Nom\" name=\"lastname\" class=\"form-control\" id=\"lastname\">\n      </div>\n\n\n    </div>\n    <div class=\"col-md-6\">\n      <!-- <div class=\"form-group\">\n        <label for=\"birth\">Date de naissance :</label>\n        <input type=\"text\" formControlName=\"birth\" placeholder=\"Date de naissance\" name=\"birth\" class=\"form-control\" id=\"birth\">\n      </div> -->\n    <div class=\"form-group\">\n      <label for=\"email\">Email :</label>\n      <input type=\"text\" formControlName=\"email\" placeholder=\"Email\" name=\"email\" class=\"form-control\" id=\"email\" >\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phoneNumber\">N° de tel :</label>\n      <input type=\"text\" formControlName=\"phoneNumber\" placeholder=\"N° de tel\" name=\"phoneNumber\" class=\"form-control\" id=\"phoneNumber\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"city\">Ville :</label>\n      <input type=\"text\" formControlName=\"city\" placeholder=\"Ville\" name=\"city\" class=\"form-control\" id=\"city\">\n    </div>\n  </div>\n</div>\n\n    <div class=\"text-center\">\n      <button class=\"btn\">Modifier</button>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../_services';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n// export { renderModule, renderModuleFactory } from '@angular/platform-server';\n"]}