{"version":3,"sources":["./src/app/components/Auth/login/login.component.ts","./src/app/components/Auth/login/login.component.html","./src/app/api/_services/index.ts","./src/environments/environment.ts","./src/app/api/_services/authentication.service.ts","./src/app/components/table/user/add-user/add-user.component.ts","./src/app/components/table/user/add-user/add-user.component.html","./src/app/components/Auth/register/register.component.ts","./src/app/components/Auth/register/register.component.html","./src/app/api/_helpers/index.ts","./src/app/api/_helpers/basic-auth.interceptor.ts","./src/app/components/table/user/list-user/list-user.component.ts","./src/app/components/table/user/list-user/list-user.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/reset-password/reset-password.resolver.ts","./src/app/components/reset-password/index.ts","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/components/nav-menu/nav-menu.component.ts","./src/app/components/nav-menu/nav-menu.component.html","./src/app/api/_helpers/error.interceptor.ts","./src/app/components/reset-password/reset-password.component.ts","./src/app/components/reset-password/reset-password.component.html","./src/app/api/_services/user.service.ts","./src/app/components/table/user/edit-user/edit-user.component.ts","./src/app/components/table/user/edit-user/edit-user.component.html","./src/app/api/_helpers/auth.guard.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../../api/_services';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/users']);\n        }\n    }\n\n    ngOnInit() {\n\n        if(window.location.pathname == \"/login\") {\n            let elements = document.getElementsByClassName(\"navbar-nav\");\n            elements[0].setAttribute(\"style\", \"visibility: hidden !important;\")\n          }\n\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"text-center\">\n            <img src=\"../../../assets/logo.png\" width=\"350\" height=\"250\">\n    </div>\n    <div class=\"card text-center\" style=\"margin-top:10%\">\n        <h4 class=\"card-header\">Identifiez-vous pour accéder à Factio</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Identifiant</label>\n                    <input type=\"text\" formControlName=\"username\" placeholder=\"Votre login\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Mot de passe</label>\n                    <input type=\"password\" formControlName=\"password\" placeholder=\"Mot de passe\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"text-right\">\n                    <button type=\"button\" class=\"btn btn-link\">Mot de passe oublié ?</button>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"text-right\">\n                    <a routerLink=\"/register\" class=\"btn btn-link\">Pas encore de compte ?</a>\n                    </div>\n                </div>\n\n                <button [disabled]=\"loading\" class=\"btn text-center\" style=\"background-color: #eb6d6d; color: white;\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Se connecter\n                </button>\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n\n</div>\n","export * from './authentication.service';\nexport * from './user.service';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    apiUrl: 'https://192.168.0.46:45456/api',\n    authApiUrl: 'https://192.168.0.46:45455/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(email: string, password: string) {\n        return this.http.post<any>(`${environment.authApiUrl}/User/authenticate`, { email, password })\n            .pipe(map(user => {\n                user.authdata = window.btoa(email + ':' + password);\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('UserToken', JSON.stringify(user.token));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    } \n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport { UserService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\n\n  addForm: FormGroup;\n\n  ngOnInit() {\n    if(!window.localStorage.getItem('currentUser')) {\n      this.router.navigate(['login']);\n      return;\n    }\n\n    this.addForm = this.formBuilder.group({\n      id: [],\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      age: ['', Validators.required],\n      salary: ['', Validators.required]\n    });\n\n  }\n\n  onSubmit() {\n    this.userService.register(this.addForm.value)\n      .subscribe( data => {\n        this.router.navigate(['list-user']);\n      });\n  }\n\n}\n","<div class=\"col-md-6 user-container\">\n  <h2 class=\"text-center\">Add User</h2>\n  <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"username\">User Name:</label>\n      <input type=\"text\" formControlName=\"username\" placeholder=\"username\" name=\"username\" class=\"form-control\" id=\"username\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" formControlName=\"password\" placeholder=\"password\" name=\"password\" class=\"form-control\" id=\"password\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name:</label>\n      <input formControlName=\"firstName\" placeholder=\"First Name\" name=\"firstName\" class=\"form-control\" id=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name:</label>\n      <input formControlName=\"lastName\" placeholder=\"Last name\" name=\"lastName\" class=\"form-control\" id=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"age\">Age:</label>\n      <input type=\"number\" formControlName=\"age\" placeholder=\"age\" name=\"age\" class=\"form-control\" id=\"age\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"salary\">Salary:</label>\n      <input type=\"number\" formControlName=\"salary\" placeholder=\"salary\" name=\"salary\" class=\"form-control\" id=\"salary\">\n    </div>\n\n    <button class=\"btn btn-success\">Add</button>\n  </form>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../../api/_services';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to login after register\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/login']);\n        }\n    }\n\n    ngOnInit() {\n\n        this.registerForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            firstname: ['', Validators.required],\n            lastname: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required],\n            phoneNumber: ['', Validators.required],\n            address: ['', Validators.required],\n            city: ['', Validators.required],\n            zip: ['', Validators.required],\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/login';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    // onSubmit() {\n    //     this.submitted = true;\n\n    //     // stop here if form is invalid\n    //     if (this.registerForm.invalid) {\n    //         return;\n    //     }\n\n\n    //     // this.loading = true;\n    //     // this.authenticationService.register(this.f.username.value, this.f.password.value)\n    //     //     .pipe(first())\n    //     //     .subscribe(\n    //     //         data => {\n    //     //             this.router.navigate([this.returnUrl]);\n    //     //         },\n    //     //         error => {\n    //     //             this.error = error;\n    //     //             this.loading = false;\n    //     //         });\n\n    // }\n\n    saveUser(): void {  \n        if (this.registerForm.dirty && this.registerForm.valid) {  \n            // alert(`name' : ${this.userForm.value.name}  'email' : ${this.userForm.value.email}`);              \n        }  \n    } \n}\n\n","<p>register works!</p>\n","export * from './auth.guard';\nexport * from './basic-auth.interceptor';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services';\n\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with basic auth credentials if available\n        const currentUser = this.authenticationService.currentUserValue;\n\n        let token = window.localStorage.getItem('UserToken');\n        if (token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: 'bearer ' + token.replace(/['\"]+/g, '')\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Component, OnInit , Inject, ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {Router} from \"@angular/router\";\nimport { Observable, of } from 'rxjs';\nimport { map, startWith, tap, withLatestFrom } from 'rxjs/operators';\nimport { User } from 'src/app/api/_models';\nimport { UserService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n\n  users: User[];\n  searchText: string = '';\n  users$: Observable<User[]>;\n  filteredUsers$: Observable<User[]>;\n  formGroup: FormGroup;\n\n  constructor(private router: Router, private userService: UserService, private formBuilder: FormBuilder) {\n    this.formGroup = this.formBuilder.group({ filter: [''] });\n   }\n\n   private getUsers() {\n    return of(this.users).pipe(tap());\n  }\n\n  ngOnInit() {\n\n    if(!window.localStorage.getItem('currentUser')) {\n      this.router.navigate(['login']);\n      return;\n    }\n\n    if(window.location.pathname != \"/login\") {\n      let elements = document.getElementsByClassName(\"navbar-nav\");\n      elements[0].setAttribute(\"style\", \"visibility: visible !important;\")\n    }\n\n    this.userService.getAll()\n      .subscribe( data => {\n        this.users = data;\n        this.formGroup = this.formBuilder.group({ filter: [''] });\n\n      this.users$ = this.getUsers();\n\n      this.filteredUsers$ = this.formGroup.get('filter').valueChanges.pipe(\n        startWith(''),\n        withLatestFrom(this.users$),\n        map(([val, users]) =>\n          !val ? users : users.filter((x) => x.username.toLowerCase().includes(val.toLowerCase()))\n        )\n      );\n      });\n  }\n\n  deleteUser(user: User): void {\n    this.userService.delete(user.id)\n      .subscribe( data => {\n        this.users = this.users.filter(u => u !== user);\n      })\n  };\n\n  editUser(user: User): void {\n    window.localStorage.removeItem(\"editUserId\");\n    window.localStorage.setItem(\"editUserId\", user.id.toString());\n    this.router.navigate(['edit-user']);\n  };\n\n  blockUser(user: User): void {\n    this.userService.block(user.id)\n      .subscribe( data => {\n        this.users = this.users.filter(u => u !== user);\n      })\n      window.location.reload();\n  };\n\n  addUser(): void {\n    this.router.navigate(['add-user']);\n  };\n}\n","<div class=\"col-md-12 user-container\">\n  <div class=\"row\">\n    <div class=\"col-md-3 mx-auto\">\n\n      <form [formGroup]=\"formGroup\">\n      <div class=\"md-form\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"searchString\"\n          placeholder=\"Rechercher\"\n          formControlName=\"filter\"\n        />\n      </div>\n    </form>\n    </div>\n  </div>\n  <table class=\"table table-striped text-center\" style=\"margin-top: 3%;\">\n    <thead>\n      <tr>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">Nom</th>\n        <th scope=\"col\">Prénom</th>\n        <th scope=\"col\">Pseudo</th>\n        <th scope=\"col\">Téléphone</th>\n        <!-- <th scope=\"col\">Date de naissance</th> -->\n        <th scope=\"col\">Ville</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of filteredUsers$ | async\">\n        <td>\n          {{ user.id }}\n        </td>\n        <td>{{ user.lastName }}</td>\n        <td>{{ user.firstName }}</td>\n        <td>{{ user.username }}</td>\n        <td>\n          {{ user.phoneNumber }}\n        </td>\n        <!-- <td>\n          {{ user.birth | date }}\n        </td> -->\n        <td>\n          {{ user.city }}\n        </td>\n        <td>\n          {{ user.email }}\n        </td>\n        <td>\n          <!-- <mat-icon class=\"mat-icon-rtl-mirror\" svgIcon=\"thumb-up\"></mat-icon> -->\n            <mat-icon (click)=\"editUser(user)\">edit</mat-icon>\n            <mat-icon (click)=\"deleteUser(user)\">delete</mat-icon>\n            <mat-icon (click)=\"blockUser(user)\">block</mat-icon>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './api/_models';\nimport { AuthenticationService } from './api/_services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n  currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    \n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve } from \"@angular/router\";\nimport { User } from \"src/app/api/_models\";\nimport { UserService } from \"src/app/api/_services\";\n\n@Injectable()\nexport class ResetPasswordResolver implements Resolve<any> {\n\n  constructor(public userService: UserService) { }\n  user: User;\n\n  resolve(route: ActivatedRouteSnapshot,) {\n\n    return new Promise((resolve, reject) => {\n      let token = route.paramMap.get('token');\n      this.userService.getUserByToken(token).subscribe(user => {\n        debugger;\n        this.user = user;\n        resolve(user)\n      })\n    })\n  }\n}\n","export * from './reset-password.component';","import { ResetPasswordResolver } from './components/reset-password/reset-password.resolver';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './components/nav-menu/nav-menu.component';\nimport { LoginComponent } from './components/Auth/login/login.component';\nimport { RegisterComponent } from './components/Auth/register/register.component';\nimport { AuthGuard, BasicAuthInterceptor, ErrorInterceptor } from './api/_helpers';\nimport { AddUserComponent } from './components/table/user/add-user/add-user.component';\nimport { ListUserComponent } from './components/table/user/list-user/list-user.component';\nimport { EditUserComponent } from './components/table/user/edit-user/edit-user.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ResetPasswordComponent } from './components/reset-password';\n\n\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    LoginComponent,\n    RegisterComponent,\n\n    //User\n    AddUserComponent,\n    EditUserComponent,\n    ListUserComponent,\n\n    ResetPasswordComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    MatIconModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    FormsModule,\n    BrowserModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([\n      { path: '', component: ListUserComponent, canActivate: [AuthGuard] },\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'users', component: ListUserComponent },\n\n      { path: 'add-user', component: AddUserComponent },\n      { path: 'edit-user', component: EditUserComponent },\n\n      { path: 'reset-password', component: ResetPasswordComponent },\n\n      { path: 'reset-password', component: ResetPasswordComponent },\n      {\n        path: 'reset-password/:token',\n        component: ResetPasswordComponent,\n        resolve: { token: ResetPasswordResolver }\n      },\n\n    ]),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    ResetPasswordResolver ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthenticationService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n  /**\n   *\n   */\n  constructor(private AuthenticationService: AuthenticationService, private router: Router) {\n      \n  }\n\n  ngOnInit(): void {\n    if(window.location.pathname == \"/login\" || window.location.pathname == \"/reset-password\" ||  window.location.pathname == \"/register\") {\n      let elements = document.getElementsByClassName(\"navbar-nav\");\n      elements[0].setAttribute(\"style\", \"visibility: hidden !important;\")\n    } else {\n      let elements = document.getElementsByClassName(\"navbar-nav\");\n      elements[0].setAttribute(\"style\", \"visibility: visible !important;\")\n    }\n  }\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  logout() {\n    this.AuthenticationService.logout();\n    this.router.navigate(['/login']);\n}\n}\n","<header>\n  <nav\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n  >\n    <div class=\"container\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\".navbar-collapse\"\n        aria-label=\"Toggle navigation\"\n        [attr.aria-expanded]=\"isExpanded\"\n        (click)=\"toggle()\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n        [ngClass]=\"{ show: isExpanded }\"\n      >\n        <ul class=\"navbar-nav flex-grow\">\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/users']\">Utilisateurs</a>\n          </li>\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-item nav-link\" (click)=\"logout()\">Déconnexion</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                // location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../api/_services';\nimport { User } from 'src/app/api/_models';\n\n\n@Component({ templateUrl: 'reset-password.component.html' })\nexport class ResetPasswordComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n    user: User;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n\n    }\n\n    ngOnInit() {\n\n        if(window.location.pathname == \"/login\") {\n            let elements = document.getElementsByClassName(\"navbar-nav\");\n            elements[0].setAttribute(\"style\", \"visibility: hidden !important;\")\n          }\n\n          this.route.data.subscribe(routeData => {\n            let user = routeData['user'];\n            if (user) {\n              this.user = user;\n            }\n          })\n\n        this.loginForm = this.formBuilder.group({\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"text-center\">\n            <img src=\"../../../assets/logo.png\" width=\"350\" height=\"250\">\n    </div>\n    <div class=\"card text-center\" style=\"margin-top:10%\">\n        <h4 class=\"card-header\">Réinitialiser votre mot de passe</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nouveau mot de passe</label>\n                    <input type=\"text\" formControlName=\"password\" placeholder=\"Mot de passe\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Confirmation du mot de passe</label>\n                    <input type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Confirmation\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n\n                <button [disabled]=\"loading\" class=\"btn text-center\" style=\"background-color: #eb6d6d; color: white;\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Valider\n                </button>\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../_models';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/User`);\n    }\n\n    getUserById(id: number) {\n        return this.http.get<User>(`${environment.apiUrl}/User/${id}`);\n    }\n\n    update(user: User) {\n        return this.http.put(`${environment.apiUrl}/User/${user.id}`, user);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/User/register`, user);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`${environment.apiUrl}/User/${id}`);\n    }\n\n    block(userId: number) {\n        return this.http.get(`/${userId}`, );\n    }\n\n    getUserByToken(token: string) {\n      return this.http.get<User>(`${environment.apiUrl}/User/GetUserByToken/${token}`);\n    }\n}\n","import { Component, OnInit , Inject} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {first} from \"rxjs/operators\";\nimport { User } from 'src/app/api/_models';\nimport { UserService } from 'src/app/api/_services';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  user: User;\n  editForm: FormGroup;\n  constructor(private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n\n    if(!window.localStorage.getItem('currentUser')) {\n      this.router.navigate(['login']);\n      return;\n    }\n\n    let userId = window.localStorage.getItem(\"editUserId\");\n    this.editForm = this.formBuilder.group({\n      id: [],\n      username: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      city: ['', Validators.required],\n      token: ['', Validators.required],\n      password: ['', Validators.required],\n      type: ['', Validators.required],\n      isBlocked: ['', Validators.required],\n    });\n    this.userService.getUserById(+userId)\n      .subscribe( data => {\n        this.editForm.setValue(data);\n      });\n  }\n\n  onSubmit() {\n    this.userService.update(this.editForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['users']);\n        },\n        error => {\n          alert(error);\n        });\n  }\n\n  editPackForUser(UserpackId: number) {\n    window.localStorage.removeItem(\"userPackId\");\n    window.localStorage.setItem(\"userPackId\", UserpackId.toString());\n    this.router.navigate(['edit-userpack']);\n  }\n\n}\n","<div class=\"col-md-12 user-container\">\n  <h2 class=\"text-center\">Modification d'un utilisateur</h2>\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n\n    <div class=\"col-md-6\">\n      <div class=\"hidden\">\n        <label for=\"username\">Identifiant :</label>\n        <input type=\"text\" formControlName=\"id\" placeholder=\"id\" name=\"id\" class=\"form-control\" id=\"id\" readonly=\"true\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Nom d'utilisateur :</label>\n        <input type=\"text\" formControlName=\"username\" placeholder=\"Nom d'utilisateur\" name=\"username\" class=\"form-control\" id=\"username\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"firstname\">Prénom :</label>\n        <input formControlName=\"firstName\" placeholder=\"Prénom\" name=\"firstname\" class=\"form-control\" id=\"firstname\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastname\">Nom :</label>\n        <input formControlName=\"lastName\" placeholder=\"Nom\" name=\"lastname\" class=\"form-control\" id=\"lastname\">\n      </div>\n\n\n    </div>\n    <div class=\"col-md-6\">\n      <!-- <div class=\"form-group\">\n        <label for=\"birth\">Date de naissance :</label>\n        <input type=\"text\" formControlName=\"birth\" placeholder=\"Date de naissance\" name=\"birth\" class=\"form-control\" id=\"birth\">\n      </div> -->\n    <div class=\"form-group\">\n      <label for=\"email\">Email :</label>\n      <input type=\"text\" formControlName=\"email\" placeholder=\"Email\" name=\"email\" class=\"form-control\" id=\"email\" >\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phoneNumber\">N° de tel :</label>\n      <input type=\"text\" formControlName=\"phoneNumber\" placeholder=\"N° de tel\" name=\"phoneNumber\" class=\"form-control\" id=\"phoneNumber\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"city\">Ville :</label>\n      <input type=\"text\" formControlName=\"city\" placeholder=\"Ville\" name=\"city\" class=\"form-control\" id=\"city\">\n    </div>\n  </div>\n</div>\n\n    <div class=\"text-center\">\n      <button class=\"btn\">Modifier</button>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../_services';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n// export { renderModule, renderModuleFactory } from '@angular/platform-server';\n"],"sourceRoot":"webpack:///"}